version: '3.4'

x-app: &app
  image: ${PHP_IMAGE:?}
  environment: &app-environment
    APP_ENV: ${APP_ENV:?}
    APP_DEBUG: ${APP_DEBUG:?}
    APP_SECRET: ${APP_SECRET:?}
    ADMIN_URL: ${ADMIN_URL:?}
    CLIENT_URL: ${CLIENT_URL:?}
    TRUSTED_PROXIES: 127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
    DATABASE_URL: ${DATABASE_URL:?}
    API_HOST: ${API_HOST:?}
    API_SCHEME: ${API_SCHEME:?}
    COMMON_HOST: ${CLIENT_HOST}
    MESSENGER_TRANSPORT_DSN: ${MESSENGER_TRANSPORT_DSN:?}
    MERCURE_JWT_SECRET: ${MERCURE_JWT_SECRET:?}
    MERCURE_PUBLISH_URL: ${MERCURE_PUBLISH_URL:?}
    MERCURE_SUBSCRIBE_URL: ${MERCURE_SUBSCRIBE_URL:?}
    VERSION_ONE_ACCESS_TOKEN: ${VERSION_ONE_ACCESS_TOKEN}
    # Example: https://www2.v1host.com/CompanyName
    VERSION_ONE_SERVER_BASE_URI: ${VERSION_ONE_SERVER_BASE_URI}
    MICROSOFT_OAUTH_CLIENT_ID: ${MICROSOFT_OAUTH_CLIENT_ID:?}
    MICROSOFT_OAUTH_TENANT_ID: ${MICROSOFT_OAUTH_TENANT_ID:?}
    MICROSOFT_OAUTH_PUBLIC_KEYS_URL: ${MICROSOFT_OAUTH_PUBLIC_KEYS_URL:?}

x-certs-dir: &CERTS_DIR
  /volumes/certs
x-db-data-dir: &DB_DATA_DIR
  /volumes/db-data
x-backups-dir: &BACKUPS_DIR
  /backups

x-backuper: &backuper
   # See docs/backuping-and-restoring-data-volumes.md for more details
   image: alpine
   profiles: ['backuper']
   environment:
     BACKUPS_DIR: *BACKUPS_DIR
     CERTS_DIR: *CERTS_DIR
     DB_DATA_DIR: *DB_DATA_DIR
   working_dir: *BACKUPS_DIR
   volumes:
     - type: bind
       source: ./backups
       target: *BACKUPS_DIR
     - type: volume
       source: certs
       target: *CERTS_DIR
     - type: volume
       source: db-data
       target: *DB_DATA_DIR

services:
  api:
    <<: *app
    environment:
      <<: *app-environment
      VIRTUAL_HOST: ${API_HOST:?}
      VIRTUAL_PROTO: fastcgi
      VIRTUAL_ROOT: /srv/api/public
    volumes:
      - vhostd:/etc/nginx/vhost.d
    depends_on:
      - db

  queue_worker:
    <<: *app
    restart: always
    healthcheck:
      disable: true
    entrypoint:
      - bin/console
      - messenger:consume
      - async_priority_high
      - async_priority_low
      # Read 'Donâ€™t Let Workers Run Forever' in https://symfony.com/doc/current/messenger.html#deploying-to-production
      - --limit=10
      - -vv
    depends_on:
      - db
      - api

  db:
    image: postgres:12-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:?}
      POSTGRES_USER: ${DB_USER:?}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?}
    volumes:
      - db-data:/var/lib/postgresql/data:rw

  mercure:
    image: dunglas/mercure:v0.10.4
    environment:
      CORS_ALLOWED_ORIGINS: ${MERCURE_CORS_ALLOWED_ORIGINS:?}
      JWT_KEY: ${MERCURE_JWT_SECRET:?}
      VIRTUAL_HOST: ${MERCURE_HOST:?}

  client:
    image: ${CLIENT_IMAGE:?}
    environment:
      VIRTUAL_HOST: ${CLIENT_HOST:?}

  admin:
    image: ${ADMIN_IMAGE:?}
    environment:
      VIRTUAL_HOST: ${ADMIN_HOST:?}
    
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - certs:/etc/nginx/certs
      - vhostd:/etc/nginx/vhost.d:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - api

  backup-db-data:
    <<: *backuper
    command: sh -c 'tar czvf db-data-`date +\%Y-\%m-\%d@\%H:\%M:\%S`.tar.gz -C $$DB_DATA_DIR .'

  restore-db-data:
    <<: *backuper
    working_dir: /
    entrypoint: sh -c 'rm -rf $$DB_DATA_DIR/* && tar xzv -C $$DB_DATA_DIR -f $$0'

  backup-certs:
    <<: *backuper
    command: sh -c 'tar czvf certs-`date +\%Y-\%m-\%d@\%H:\%M:\%S`.tar.gz -C $$CERTS_DIR .'

  restore-certs:
    <<: *backuper
    working_dir: /
    entrypoint: sh -c 'rm -rf $$CERTS_DIR/* && tar xzv -C $$CERTS_DIR -f $$0'

volumes:
  db-data:
  certs:
  vhostd:
